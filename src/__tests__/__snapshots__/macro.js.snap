// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros README:1 \`importAll.deferredNamed\` gives an object where key is the named export and value is the dynamic import: README:1 \`importAll.deferredNamed\` gives an object where key is the named export and value is the dynamic import 1`] = `

import importAll from 'named-import-all.macro'

const routes = importAll.deferredNamed('./files/*.js')

      ↓ ↓ ↓ ↓ ↓ ↓

const routes = {
  foo: function() {
    return import('./files/a.js').then(function(res) {
      return res.foo
    })
  },
  bar: function() {
    return import('./files/b.js').then(function(res) {
      return res.bar
    })
  },
  Baz: function() {
    return import('./files/c.js').then(function(res) {
      return res.Baz
    })
  },
  A: function() {
    return import('./files/d.js').then(function(res) {
      return res.A
    })
  },
}


`;

exports[`macros incorrect API usage: incorrect API usage 1`] = `

import importAll from 'named-import-all.macro'
const x = importAll.defered('hi')

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/__tests__/macro.js: ../macro: This is not supported: \`importAll.defered\`. Please see the named-import-all.macro documentation

`;

exports[`macros no usage: no usage 1`] = `

import importAll from 'named-import-all.macro'

      ↓ ↓ ↓ ↓ ↓ ↓



`;

exports[`macros non-static evaluate-able expression: non-static evaluate-able expression 1`] = `

import importAll from 'named-import-all.macro'
const x = importAll(global.whatever)

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/__tests__/macro.js: ../macro: There was a problem evaluating the value of the argument for the code: x = importAll(global.whatever). If the value is dynamic, please make sure that its value is statically deterministic.

`;
